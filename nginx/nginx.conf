user  nginx;
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  /var/log/nginx/access.log  main;
    access_log  /dev/null  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout   70;

    gzip  on;

    # ssl_session_cache shared:SSL:5m;
    # ssl_session_timeout 1h;

    # server {
    #     listen 443 ssl http2 default_server;
    #     listen [::]:443 ssl http2 default_server;

    #     server_name q-and-a.loc www.q-and-a.loc;

    #     ssl_certificate /etc/nginx/ssl/q-and-a.loc.crt;
    #     ssl_certificate_key /etc/nginx/ssl/q-and-a.loc.key;
    #     ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    #     ssl_prefer_server_ciphers on;
    #     ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    # }

    server {
        listen       80;
        listen       [::]:80;
        server_name  q-and-a.loc www.q-and-a.loc;
        # return       301 https://$server_name$request_uri;

        location /api/ {
            proxy_pass http://192.168.99.100:4000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location / {
            proxy_pass http://192.168.99.100:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
